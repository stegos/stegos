name: Release
on:
  push:
    tags:
      - 'v*'
    branches:
      - 'actions'


jobs:
  create_release:
    name: Create release page
    runs-on: ubuntu-16.04
    steps:
      - name: Set tag name
        shell: bash
        run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF##*/})"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BRANCH_NAME }}
          release_name: Release ${{ env.BRANCH_NAME }}
          draft: true
          
  release:
    name: Release
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos]
        include:
          - build: linux
            os: ubuntu-16.04
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
    steps:
      # Checkout the source code
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-index-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-release-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-release-target-

      - name: Install missing packages
        run: ./ci-scripts/build.sh builddep
        shell: bash

      - name: release
        run: ./ci-scripts/build.sh release ${{matrix.build}}-x64
        shell: bash

      - name: Upload Release Assets
        run: |
          set -x
          assets=()
          for asset in ./release/*; do
            title=${{matrix.build}}-$(basename $asset)
            assets+=("-a" "$asset#$title")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release edit "${assets[@]}" -m '' "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  win:
    name: Release (windows)
    needs: create_release
    runs-on: windows-2019
    env: 
      target: x86_64-pc-windows-gnu
    defaults:
      run:
        shell: bash.exe -eo pipefail "{0}"
    steps:
      - name: Set up shell
        run: | 
          echo ::add-path::C:\msys64\usr\bin\
          echo ::add-path::C:\msys64\mingw64\bin\
        shell: pwsh
      # Checkout the source code
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: c:/Users/runneradmin/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: c:/Users/runneradmin/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-index-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-release-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-release-target-

      - name: Install missing packages
        run: ./ci-scripts/build.sh builddep

      - name: release
        run: ./ci-scripts/build.sh release win-x64

      - name: Upload Release Assets
        run: |
          set -x
          assets=()
          for asset in ./release/*; do
            title=win-$(basename $asset)
            assets+=("-a" "$asset#$title")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release edit "${assets[@]}" -m '' "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  android:
    name: Release 
    needs: create_release
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        build: [android-x64, android-aarch64]
        include:
          - build: android-x64
            os: ubuntu-16.04
          - build: android-aarch64
            os: ubuntu-16.04
    steps:
      # Checkout the source code
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-index-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-release-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-release-target-

      - name: Install missing packages
        run: WITH_ANDROID=1 ./ci-scripts/build.sh builddep
        shell: bash

      - name: Test
        run: WITH_ANDROID=1 ./ci-scripts/build.sh release ${{matrix.build}}
        shell: bash

      - name: Upload Release Assets
        run: |
          set -x
          assets=()
          for asset in ./release/*; do
            title=${{matrix.build}}-$(basename $asset)
            assets+=("-a" "$asset#$title")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release edit "${assets[@]}" -m '' "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

