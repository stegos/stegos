name: Release
on: 
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -eo pipefail "{0}"

    strategy:
      matrix:
        build: [linux-x64, macos-x64, win-x64, android-x64, android-aarch64]

        include:
          - build: linux-x64
            os: ubuntu-16.04
            cargo_folder: ~/.cargo
            file: stegos
            archive: .tar.gz
            type: application/gzip

          - build: win-x64
            os: windows-2019
            cargo_folder: c:/Users/runneradmin/.cargo
            file: stegos
            archive: .zip
            type: application/zip

          - build: macos-x64
            os: macos-latest
            cargo_folder: ~/.cargo
            file: stegos
            archive: .tar.gz
            type: application/gzip
          
          - build: android-x64
            os: ubuntu-16.04
            cargo_folder: ~/.cargo
            file: libstegos
            archive: .tar.gz
            type: application/gzip

          - build: android-aarch64
            os: ubuntu-16.04
            cargo_folder: ~/.cargo
            file: libstegos
            archive: .tar.gz
            type: application/gzip
            

    steps:
      - name: Set up windows shel
        run: | 
          echo ::add-path::C:\msys64\usr\bin\
          echo ::add-path::C:\msys64\mingw64\bin\
        shell: pwsh
        if: matrix.build == 'win-x64'

      - name: Set up android build
        run: echo "::set-env name=WITH_ANDROID::1"
        if: startsWith(matrix.build, 'android')

      - name: Set up version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF##*/})

      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ${{matrix.cargo_folder}}/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ${{matrix.cargo_folder}}/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-index-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-release-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
                ${{ runner.os }}-cargo-release-target-

      - name: Install missing packages
        run: ./ci-scripts/build.sh builddep

      - name: release
        run: ./ci-scripts/build.sh build_release ${{matrix.build}}

      - name: Upload
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ matrix.build }}-${{ matrix.file }}-${{steps.get_version.outputs.VERSION}}${{ matrix.archive}}
          asset_path: release/${{ matrix.file }}${{ matrix.archive }}
          asset_content_type: ${{ matrix.type }}

