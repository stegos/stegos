syntax = "proto3";
package stegos.blockchain;

import "crypto.proto";
import "view_changes.proto";

message PaymentOutput {
    stegos.crypto.PublicKey recipient = 1;
    stegos.crypto.Pt cloaking_hint = 2;
    stegos.crypto.BulletProof proof = 3;
    stegos.crypto.EncryptedPayload payload = 4;
}

message PublicPaymentOutput {
    stegos.crypto.PublicKey recipient = 1;
    int64 serno = 2;
    int64 amount = 3;    
}

message StakeOutput {
    stegos.crypto.PublicKey recipient = 1;
    stegos.crypto.SecurePublicKey validator = 2;
    int64 amount = 3;
    int64 serno = 4;
    stegos.crypto.SecureSignature signature = 5;
}

message Output {
    oneof output {
        PaymentOutput payment_output = 1;
        PublicPaymentOutput public_payment_output = 2;
        StakeOutput stake_output = 3;
    }
}

message Transaction {
    repeated stegos.crypto.Hash txins = 1;
    repeated Output txouts = 2;
    stegos.crypto.Fr gamma = 3;
    int64 fee = 4;
    stegos.crypto.SchnorrSig sig = 5;
}

message RestakeTransaction {
    repeated stegos.crypto.Hash txins = 1;
    repeated Output txouts = 2;
    stegos.crypto.SecureSignature sig = 3;
}

message BaseBlockHeader {
    uint64 version = 1;
    stegos.crypto.Hash previous = 2;
    uint64 height = 3;
    uint32 view_change = 4;
    uint64 timestamp = 5;
    stegos.crypto.VRF random = 6;
}

message MacroBlockHeader {
    BaseBlockHeader base = 1;
    stegos.crypto.Fr gamma = 2;
    int64 block_reward = 3;
    stegos.crypto.Hash inputs_range_hash = 4;
    stegos.crypto.Hash outputs_range_hash = 5;
    ViewChangeProof proof = 6;
}

message MerkleNode {
    stegos.crypto.Hash hash = 1;
    uint64 left = 2;
    uint64 right = 3;
    Output value = 4;
}

message MacroBlockBody {
    repeated stegos.crypto.Hash inputs = 1;
    repeated MerkleNode outputs = 2;
    stegos.crypto.SecurePublicKey pkey = 3;
    stegos.crypto.SecureSignature sig = 4;
    repeated bool sigmap = 5;
}

message MacroBlock {
    MacroBlockHeader header = 1;
    MacroBlockBody body = 2;
}

message Coinbase {
    int64 block_reward = 1;
    int64 block_fee = 2;
    stegos.crypto.Fr gamma = 3;
    repeated Output outputs = 4;
}

message MicroBlock {
    BaseBlockHeader base = 1;
    ViewChangeProof view_change_proof = 2;
    Coinbase coinbase = 3;
    repeated Transaction transactions = 4;
    stegos.crypto.SecurePublicKey pkey = 5;
    stegos.crypto.SecureSignature sig = 6;
}

message Block {
    oneof block {
        MacroBlock macro_block = 1;
        MicroBlock micro_block = 2;
    }
}